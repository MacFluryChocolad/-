02.09.2021
ООП 
 
Лекція 1. Структура програми С++
ОО-підхід історично прийшов на зміну функц. підходу, коли програма розбивалась на окремі фрагменти -
фкнкції, які отримували вхідні дані, відповідно до своєї логіки обробляти їх і повертали результат.

Алфавіт мови, або її символи - це осн. неподільні знаки, за допомогою яких пишуться всі тексти на мові 
програмування

Лексема, або елементарна конструкція- мінімальна одиниця мови, яка має самост. зміст(ідентифікатори,
ключ. слова, константи, операції, розділювачі). 
Вираз задає правило обчислення деякого значення.
Оператор задає кінцевий запис деякої дії

Алфавіт мови склад. з - великих і малих літер латинського алфавіту, цифр та спец. символів.

Константами назив .сталі величини, тобто такі, які в процесі виконання програми не змін.
Цілі конст. можуть бути 10-вими, вісімковими,  або 16-ковимию
Десяткова від 0 до 9.
Вісімкова 0-7. Почин. з символу 0
Шістнадцятвові 0-F почин., з 0х або 0Х, наприклад 0ХF123

Дійсні конст. склад. з цілої частини, десяткової крапки, дробової чатини, символу експоненти 
(е або Е) та показника степеня. Дійсні конст. мають наступний формат представлення:
[Ціла_частина][.дробова_частина][Е[-]степінь]

Символьна конст. - це один  або декілька символів, які заключені в апострофи. Якщо конст склад. з 
одного символу, вона займає в пам'яті 1 байт типу char
Таблиця символів (скріншотом)

Рядкові конст. запис. як послідовності символів, заключених в подвійні лапки.

Нульовий вказівник - єдина неарифмет. конст., зо представляється різними компіляторами як 0, 0Л, або 
NULL/ 
Коментарі (скріншотом)

10.09.2021
ООП 
 
Лекція 1. Структура програми С++ (продовження)
ключові слова - це зарезервовані ідентифікатори, які маю спец. значення для компілятора. 
Їх використання суворо регламентованета. Імена змінних, констант, міток, типів
тощо, не можуть співпадати з ключ. словами.
кл. слово - одне зі слів мови, що входять до наступного списку:
- специфікатори типів: char, class, double, enum, float, int,
long, short, struct, signed, union, unsigned, void, typedef, typeid
- кваліфікатори об'єктів і типів: const, friend, inline, virtual, volatile
- специфікатори доступу: private, protected, public
- кваліфікатори класів пам'яті: auto, extern, register, static.
- оператори мови та ідентифікатори спец. призначення: break, catch, continue, delete, do, for,
 goto, if, new, return, switch, throw, try, while: asm, default, case, else, operator, sizeof,
 template, this.
- модифікатори та псевдозмінні: конкретний набір залежить від компілятора.

Операція - "чотири крапки", ".*", "->*", "new delete typeid"
Розділювач - парний або поодинокий знак пунктуації, що входит в наступний список:
[] () {} , ; : ... * = # &

знаки та приорітет операцій
Приорітет                 Знаки             Порядок виконання операцій
операцій                 операцій             з однаковим приорітетом

1.                       () [] -> :: .                  зліва направо (з. н.)
2.               ! ` + - ++ --  & * (<ім'я типу>)         справа наліво (с. н.)
3.                            .* ->*                        (з. н.)
4.                             * / %                        (з. н.)
5.                              + -                         (з. н.)
6.                            <<  >>                        (з. н.)
7.                           < <= >= >                      (з. н.)
8.                             == !=                        (з. н.)
9.                              &                           (з. н.)
10.                             ^                           (з. н.)
11.                             I                           (з. н.)
12.                             &&                          (з. н.)
13.                             II                          (з. н.)
14.                             ?:                          (с. н.)
15.              =  *= /= %= += -= &= ^= I= <<= >>=         (с. н.)
16.                              ,                          (з. н.)

Клас - узагальнена структура, объект - конкретный элемент из этой группы (класса)
Успаткування -  коли властивості об'єкта передається всьому класу
Поліморфізм - різні класи або об'єкти, мають однакові властивості (птах та літак)
Доступ до компонентів об'єкта :
ідентифікатор. тип. компонент.
Приклад: іванов студент ім'я

14.09.2021